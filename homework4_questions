 HOMEWORK WEEK 4
(handout for students)
Hodan Omar

TASK 1 (Git and GitHub)

Question 1
Complete definitions for key Git & GitHub terminology
GIT WORKFLOW FUNDAMENTALS
·        Working Directory
A working directory is basically the file you are currently working on. It is the folder you create where your files for your projects are stored.  It essentially is your project folder. Working directory is sometimes called a working tree.
·        Staging Area
This is also known as the intermediate area. This is where you can add files one at a time when you are ready and then when you are ready you can bundle these files and commit. You can add one or multiple files at a time using git add that you wanted added and saved to next commit.
·        Local Repo (head)
Simply the local repo is the repository that is stored in your computer, laptop PC. This is where the files and folders are stored locally to you in your operating system. So, the changes you make on your files so far are only committed to your computer locally only you have access and can make changes.

·        Remote repo (master)
 This is where the files and folders are located in a remote repository such as in GitHub. This means, the files and folders are saved remotely and individuals who have been given access can  make changes. But it also means your work is saved remotely and there’s a copy of the files/folders and you can look back at old versions of the program.
WORKING DIRECTORY STATES:
·        Staged
Files have been added and ready to be committed.
·        Modified
Some files and folders have been moved or removed and changed. This means the file has been changed since it has been last committed.
·        Committed
Files and folders have been saved, any changes have been saved using git commit and are now committed.

GIT COMMANDS:
·        Git add
This command moves the changes you have made on program in working directory to the intermediate staging area. This gives you an opportunity to move one thing at a time and take a look before committing it.
·        Git commit
This command takes the changes you have added to the staging area and save it to local repository. This is done with a message describing what has been added and saved. Git commit takes a ‘snapshot’ of the current staged changes.
·        Git push
This allows you to move the content from the local  repository after saving them using git commit to the remote repository. This allows you to publish contributions on a group project for example.
·        Git fetch
This is where you download everything. This is the opposite of git push, it allows you to retrieve all branches and content from a remote repository to local repository. It doesn’t overwrite existing code on branch.
·        Git merge
This is where you can merge branches in git. This is where you can integrate changes from one branch from another branch. It allows you to collaborate with others on a project for example and compare and add changes collaboratively to project, merging all your work and changes to one branch with latest updates. It connects the forked history.
·        Git pull
This retrieves the content from the remote repository to the local repository. It updates what is on the local repository and incorporates changes into the branch. This git pull operation allows your local repository to be updated with changes from remote.
